// https://www.sublimetext.com/docs/key_bindings.html

// find menu commands
// cp "/Applications/Sublime Text.app/Contents/MacOS/Packages/Default.sublime-package" .
// unzip Default.sublime-package -d ./Default\ Package/
// cd Default\ Package/

// find plugin command IDs
// /Library/Application Support/Sublime Text/Installed Packages/
// Plugin Package → unzip → Default.sublime-commands

// toggle multiple commands
// https://stackoverflow.com/questions/23312111/multiple-commands-with-args-under-1-hotkey-in-sublime-text-3

[
	// Window Closing Bugfix, https://github.com/sublimehq/sublime_text/issues/5237#issuecomment-1048857619
	{ "keys": ["super+q"],
		"command": "chain",
		"args": {
			"commands": [
				["close_all"],
				["exit"]
			]
		}
	},

	// Build System
	{ "keys": ["super+r"], "command": "build", "context": [
		{"key": "selector", "operator": "equal", "operand": "source.shell"},
		{"key": "selection_empty", "operator": "equal", "operand": true},
	] },
	// Build Selection
	{ "keys": ["super+shift+r"], "command": "build", "args": {"select": true} },
	// Lint (using Build System)
	{ "keys": ["shift+super+alt+ctrl+n"], "command": "build", "args": { "variant": "Lint Autofix" } },
	// Executionable (using Build System)
	{ "keys": ["shift+super+alt+ctrl+x"], "command": "build", "args": { "variant": "Make Executable" } },
	// Color Picker (using Build System)
	{ "keys": ["shift+super+alt+ctrl+c"], "command": "build", "args": {"variant": "Color Picker"}},

	// Build System: Shell, no Selection
	{ "keys": ["super+r"], "command": "build", "context": [
		{"key": "selector", "operator": "equal", "operand": "source.shell"},
		{"key": "selection_empty", "operator": "equal", "operand": true},
	] },
	// Build System: Rest
	{ "keys": ["super+r"], "command": "build", "context": [
		{"key": "selector", "operator": "not_equal", "operand": "text.html.markdown"},
		{"key": "selector", "operator": "not_equal", "operand": "source.shell"},
	] },
	// Build System: Shell, with Selection  ➞ Send Code
	{ "keys": ["super+r"], "command": "send_code", "context": [
		{"key": "selector", "operator": "equal", "operand": "source.shell"},
		{"key": "selection_empty", "operator": "equal", "operand": false},
	] },

	// cmd + k: Inter-File Navigation via goto or table of comments
	{ "keys": ["super+k"], "command": "show_overlay",
		"args": {"overlay": "goto", "text": "@"},
		"context": [
			{"key": "selector", "operator": "not_equal", "operand": "text.html.markdown"},
			{"key": "selector", "operator": "not_equal", "operand": "source.css"},
	] },
	{ "keys": ["super+k"], "command": "goto_comment", "context": [
		{"key": "selector", "operator": "equal", "operand": "source.css"},
	] },
	// cmd + k: Markdown link
	{ "keys": ["super+k"], "command": "mde_reference_new_inline_link", "context": [
		{ "key": "selector", "operator": "equal", "operand": "text.html.markdown" },
	] },
	// Navigate to Brackets
	{ "keys": ["super+b"], "command": "move_to", "args": {"to": "brackets"} },


	// Sublime Linter Navigation
	{ "keys": ["super+e"], "command": "sublime_linter_goto_error", "args": { "direction": "next", "wrap": true } },
	{ "keys": ["super+shift+e"], "command": "sublime_linter_goto_error", "args": { "direction": "previous", "wrap": true } },

	// Case Conversion
	{ "keys": ["ctrl+c"], "command": "convert_to_camel", "context": [ // Case Converter Plugin: Convert to camelCase
		{ "key": "terminus_view", "operator": "not_equal" }, // context necessary to avoid conflict with Terminus
	] },
	{ "keys": ["ctrl+u"], "command": "upper_case", "context": [
		{ "key": "terminus_view", "operator": "not_equal" },
	] },
	{ "keys": ["ctrl+l"], "command": "lower_case", "context": [
		{ "key": "terminus_view", "operator": "not_equal" },
	] },

	// Lines
	{ "keys": ["super+d"], "command": "run_macro_file", "args": { "file": "res://Packages/Default/Delete Line.sublime-macro" } },
	{ "keys": ["super+2"], "command": "swap_line_up" },
	{ "keys": ["super+3"], "command": "swap_line_down" },

	// Merge Line up
	{ "keys": ["super+m"], "command": "join_lines" },
	// Merge Line down
	{ "keys": ["super+shift+m"], "command": "run_macro_file", "args": {"file": "res://Packages/User/Merge Line Down.sublime-macro"} },

	// Better Duplicate (Plugin)
	{ "keys": ["super+shift+d"], "command": "duplicate_lines" },
	// Smart Duplicate (CSS) (Plugin)
	{ "keys": ["shift+super+alt+ctrl+d"], "command": "smart_duplicate", "context": [
		{"key": "selector", "operator": "equal", "operand": "source.css"},
	]},
	// Kill Line
	{ "keys": ["ctrl+k"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete to Hard EOL.sublime-macro"} },
	// Split Line
	{ "keys": ["super+shift+l"], "command": "split_selection_into_lines"},

	// Multi Cursor down / up
	{ "keys": ["ctrl+shift+up"], "command": "select_lines", "args": {"forward": false} },
	{ "keys": ["ctrl+shift+down"], "command": "select_lines", "args": {"forward": true} },

	// Scrolling
	{ "keys": ["ctrl+up"], "command": "scroll_lines", "args": {"amount": 15.0} },
	{ "keys": ["ctrl+down"], "command": "scroll_lines", "args": {"amount": -15.0} },

	// Comment
	{ "keys": ["super+7"], "command": "toggle_comment", "args": { "block": false } },

	// Fold
	{ "keys": ["super+shift+alt+ctrl+1"], "command": "fold_by_level", "args": {"level": 1} },
	{ "keys": ["super+shift+alt+ctrl+2"], "command": "fold_by_level", "args": {"level": 2} },
	{ "keys": ["super+shift+alt+ctrl+3"], "command": "fold_by_level", "args": {"level": 3} },
	{ "keys": ["super+shift+alt+ctrl+4"], "command": "fold_by_level", "args": {"level": 4} },
	{ "keys": ["super+4"], "command": "unfold" },

	// Undo/Redo Selection
	{ "keys": ["super+u"], "command": "jump_back" },
	{ "keys": ["super+shift+u"], "command": "jump_forward" },

   // Disable Saving
   { "keys": ["super+shift+s"], "command": "noop" },

	// Expand Selection
	{ "keys": ["super+j"], "command": "find_under_expand" },
	{ "keys": ["super+shift+j"], "command": "find_under_expand_skip" },
	{ "keys": ["super+l"], "command": "expand_selection", "args": {"to": "line"} },
	{ "keys": ["super+shift+alt+ctrl+a"], "command": "lsp_expand_selection"},

	// Paste and Indent & Convert Indentation
	{ "keys": ["super+v"], "command": "paste_and_indent",
		"context": [{"key": "terminus_view", "operator": "not_equal" ,"operand": true}]
	},
	{ "keys": ["super+i"], "command": "reindent", "args": {"single_line": false} },

	// Palette & Installation
	{ "keys": ["super+p"], "command": "show_overlay", "args": { "overlay": "command_palette" } },
	{ "keys": ["shift+super+alt+ctrl+i"], "command": "install_package" },
	{ "keys": ["shift+super+alt+ctrl+r"], "command": "remove_package" },

	// Edit Keybindings Settings
	{  "keys": ["super+shift+,"], "command": "edit_settings", "args": { "base_file": "${packages}/Default/Default ($platform).sublime-keymap" } },

	// Toggles
	// Spellcheck
	{ "keys": ["ctrl+s"], "command": "toggle_setting", "args": {"setting": "spell_check"} },
	// Wrap
	{ "keys": ["shift+alt+super+ctrl+w"], "command": "toggle_setting", "args": { "setting": "word_wrap" } },
	// Switch Color Scheme
	{ "keys": ["shift+alt+super+ctrl+h"], "command": "select_color_scheme" },
	// Sidebar/Tab bar
	{ "keys": ["super+1"],
		"command": "chain",
		"args": {
			"commands": [
				["toggle_tabs"],
				["toggle_side_bar"]
			]
		}
	},

	// File Management
	{ "keys": ["super+n"], "command": "advanced_new_file_new"},
	{ "keys": ["ctrl+d"], "command": "advanced_new_file_copy"},
	{ "keys": ["super+backspace"], "command": "delete_current_file" },
	{ "keys": ["shift+alt+super+ctrl+l"], "command": "open_dir", "args": {"dir": "$file_path", "file": "$file_name"}  },
	{ "keys": ["ctrl+r"], "command": "rename_file"},
	{ "keys": ["ctrl+p"], "command": "copy_path" },
	{ "keys": ["ctrl+n"], "command": "copy_filename" }, // Custom Plugin
	{ "keys": ["super+o"], "command": "open_browse" }, // Plugin

	// TERMINUS
	// Terminus: Open a terminal panel at current file directory
	{  "keys": ["super+t"],
		"command": "toggle_terminus_panel",
		"args": {
			"cwd": "${file_path:${folder}}",
		}
	},
	// fix entering of pipe character and @
	{ "keys": ["alt+7"], "command": "terminus_keypress", "args": {"key": "|"}, "context": [{"key": "terminus_view"}] },
	{ "keys": ["alt+l"], "command": "terminus_keypress", "args": {"key": "@"}, "context": [{"key": "terminus_view"}] },
	{ "keys": ["super+k"], "command": "terminus_keypress", "args": {"key": "l", "ctrl": true}, "context": [{"key": "terminus_view"}] },


	// OPEN
	// GitHubinator
	{ "keys": ["shift+alt+super+ctrl+g"], "command": "githubinator", "args" : { "permalink": false }},
	// Open URL
	{ "keys": ["super+enter"], "command": "open_url_under_cursor" },

	// MARKDOWN
	{ "keys": ["super+r"], "command": "markdown_preview", "args": {"target": "browser", "parser":"github"} , "context": [
		{"key": "selector", "operator": "equal", "operand": "text.html.markdown"},
	] },
	{ "keys": ["shift+alt+super+ctrl+u"], "command": "mde_fold_links", "context": [
		{"key": "selector", "operator": "equal", "operand": "text.html.markdown"},
	] },
	{ "keys": ["super+^"], "command": "mde_reference_new_footnote", "context": [
		{ "key": "selector", "operator": "equal", "operand": "text.html.markdown", "match_all": true },
		{ "key": "setting.mde.keymap_disable.reference_new_footnote", "operator": "not_equal", "operand": true }
	] },
	{ "keys": ["super+e"], "command": "insert", "args": {"characters": "``"}, "context": [
			{"key": "selector", "operator": "equal", "operand": "text.html.markdown"},
	] },
]

